stages:
- conflict

# Git не должен открывать окошко логина
variables:
  GIT_TERMINAL_PROMPT: "0"

generate_and_push_conflict:
  stage: conflict
  only:
  - development # job только для ветки development
  tags:
  - runner # убери, если у раннера нет тега
  script: |
    $ErrorActionPreference = 'Stop'

    if (-not $env:GITHUB_TOKEN) {
      Write-Error 'GITHUB_TOKEN env var is empty'; exit 1
    }

    git config --global user.name  'hook-bot'
    git config --global user.email 'hook-bot@example.com'
    git config --global credential.helper ''   # выключаем все менеджеры

    # --- репозиторий с PAT как паролем ---
    $gh = "https://x-access-token:$($env:GITHUB_TOKEN)@github.com/akaptelinin/gitlab-github-mirror-test.git"

    $work = Join-Path $PWD 'temp_repo'
    if (Test-Path $work) { Remove-Item $work -Recurse -Force }
    New-Item -ItemType Directory -Path $work | Out-Null
    Set-Location $work

    git init
    git remote add origin $gh
    git fetch origin development
    git checkout -b development origin/development

    if (-not (Test-Path dev_conflict.txt)) {
      & "$CI_PROJECT_DIR\generate_dev_conflict.ps1" dev_conflict.txt
      git add dev_conflict.txt
      $now = (Get-Date).ToString('dd MMM yyyy HH:mm').ToLower()
      git commit -m "auto-conflict file generated. $now"
    } else {
      Write-Host 'dev_conflict.txt already exists, skip generation'
    }

    # --- пушим; если не fast‑forward или проблема с auth → exit 1 ---
    git push --porcelain origin HEAD:development
    if ($LASTEXITCODE -ne 0) {
      Write-Error 'push failed (branch updated on remote or auth error)'
      exit 1
    } else {
      Write-Host 'push OK'
    }
